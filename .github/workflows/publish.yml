# This workflow takes care of the publication of the Python package on PyPI.
# If the package is in development, the publication is done on TestPyPI on every
# push on the develop branch. When a release is created, a publication is done
# on PyPI.

name: Publish

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  release:
    types: [created]

jobs:
  publish-package:
    name: Publish Package
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        echo ${{ github.ref }}
        python -m pip install --upgrade pip
        pip install --no-input -r ./requirements/publish-package.txt

    - name: Build
      run: |
        python setup.py sdist bdist_wheel

    - name: Publish on TestPyPI
      if: ${{ github.ref == 'develop' }}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*

    - name: Publish on PyPI
      if: ${{ github.ref == 'master' }}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*

  publish-docs:
    name: Publish Documentation
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          sudo apt-get install -y pandoc
          pip install --no-input -r ./requirements/publish-docs.txt

      - name: Sphinx Build
        run: |
          m2r README.md
          cd ./docs
          make html

      - name: Staging Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.1
        if: ${{ github.ref == 'develop' }}
        with:
          publish-dir: './docs/_build/html'
          production-branch: master
          production-deploy: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

      - name: Production Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.1
        if: ${{ github.ref == 'master' }}
        with:
          publish-dir: './docs/_build/html'
          production-branch: master
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
